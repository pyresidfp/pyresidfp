name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.0
        env:
          CIBW_BUILD: "{cp,pp}3*-*"
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_i686"
          CIBW_ARCHS_MACOS: x86_64 universal2
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          CIBW_TEST_SKIP: "*-macosx_universal2:arm64"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-wheels
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  merge:
    name: Merge artifacts
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-wheels
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: macos-latest-wheels
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: windows-latest-wheels
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: Merged artifacts
        run: ls -R dist
      - uses: actions/upload-artifact@v4
        with:
          name: merged
          path: dist


  upload_testpypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [merge]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyresidfp
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: merged
          path: dist

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          attestations: true
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [merge, upload_testpypi]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyresidfp
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: merged
          path: dist

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          attestations: true
